{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HeaderButton from '../HeaderButton/HeaderButton';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\nvar PanelHeaderEdit = function PanelHeaderEdit(_ref) {\n  var isActive = _ref.isActive,\n      editLabel = _ref.editLabel,\n      doneLabel = _ref.doneLabel,\n      restProps = _objectWithoutProperties(_ref, [\"isActive\", \"editLabel\", \"doneLabel\"]);\n\n  var iOSText = isActive ? doneLabel : editLabel;\n  var AndroidIcon = isActive ? React.createElement(Icon24Done, null) : React.createElement(Icon24Write, null);\n  return React.createElement(HeaderButton, restProps, IS_PLATFORM_ANDROID ? AndroidIcon : iOSText);\n};\n\nPanelHeaderEdit.propTypes = {\n  onClick: PropTypes.func.isRequired,\n\n  /**\n   * Включен ли режим редактирования\n   */\n  isActive: PropTypes.bool,\n\n  /**\n   * iOS only. Текст кнопки, когда режим редактирования не активен\n   */\n  editLabel: PropTypes.string,\n\n  /**\n   * iOS only. Текст кнопки при активном режиме редактирования для выхода из него\n   */\n  doneLabel: PropTypes.string\n};\nPanelHeaderEdit.defaultProps = {\n  isActive: false,\n  editLabel: 'Редактировать',\n  doneLabel: 'Готово'\n};\nexport default PanelHeaderEdit;","map":null,"metadata":{},"sourceType":"module"}