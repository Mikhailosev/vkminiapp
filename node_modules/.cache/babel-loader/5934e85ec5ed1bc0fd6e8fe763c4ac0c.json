{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\n/**\n * @deprecated будет удален в версии 3.0.0\n */\n\nvar querystring = {\n  parse: function parse() {\n    var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    if (typeof string !== 'string') return {};\n    var matches = /\\?(.+)$/ig.exec(string);\n    var str = matches ? matches[1] : string;\n    return str.split('&').reduce(function (acc, item) {\n      var param = item.split('=');\n\n      if (param[1]) {\n        acc[param[0]] = decodeURIComponent(param[1]);\n      }\n\n      return acc;\n    }, {});\n  },\n  create: function create() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var opts = arguments.length > 1 ? arguments[1] : undefined;\n    if (_typeof(data) !== 'object' || data === null) return '';\n\n    var options = _objectSpread({\n      encode: true\n    }, opts);\n\n    return Object.keys(data).reduce(function (acc, item) {\n      var type = _typeof(data[item]);\n\n      if (type === 'string' || type === 'number' || type === 'boolean') {\n        acc.push(item + '=' + (options.encode ? encodeURIComponent(data[item]) : data[item]));\n      }\n\n      if (Array.isArray(data[item])) {\n        data[item].forEach(function (value) {\n          acc.push(item + '[]=' + (options.encode ? encodeURIComponent(value) : value));\n        });\n      }\n\n      return acc;\n    }, []).join('&');\n  }\n};\nexport default querystring;","map":null,"metadata":{},"sourceType":"module"}