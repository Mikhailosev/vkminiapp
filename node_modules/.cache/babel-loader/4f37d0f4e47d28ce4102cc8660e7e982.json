{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport Tappable from '../Tappable/Tappable';\nvar baseClassNames = getClassName('PanelHeaderContent');\n\nvar PanelHeaderContent = function PanelHeaderContent(_ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      aside = _ref.aside,\n      status = _ref.status,\n      before = _ref.before,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"style\", \"aside\", \"status\", \"before\", \"children\", \"onClick\"]);\n\n  var InComponent = onClick ? Tappable : 'div';\n  var rootProps = onClick ? {} : restProps;\n  var inProps = onClick ? _objectSpread({}, restProps, {\n    activeEffectDelay: 200\n  }) : {};\n  return React.createElement(\"div\", _extends({}, rootProps, {\n    className: classNames(baseClassNames, className),\n    style: style\n  }), IS_PLATFORM_ANDROID && before && React.createElement(\"div\", {\n    className: \"PanelHeaderContent__before\"\n  }, before), React.createElement(InComponent, _extends({}, inProps, {\n    className: \"PanelHeaderContent__in\",\n    onClick: onClick\n  }), status && React.createElement(\"div\", {\n    className: \"PanelHeaderContent__status\"\n  }, status), React.createElement(\"div\", {\n    className: \"PanelHeaderContent__children\"\n  }, React.createElement(\"span\", {\n    className: \"PanelHeaderContent__children-in\"\n  }, children), aside && React.createElement(\"div\", {\n    className: \"PanelHeaderContent__aside\"\n  }, aside))));\n};\n\nPanelHeaderContent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  aside: PropTypes.node,\n  status: PropTypes.node,\n  onClick: PropTypes.func,\n\n  /**\n   * Android only\n   */\n  before: PropTypes.node\n};\nexport default PanelHeaderContent;","map":null,"metadata":{},"sourceType":"module"}