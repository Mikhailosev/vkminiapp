{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nvar baseClassName = getClassName('FormLayout');\n\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\n\nvar FormLayout = function FormLayout(props) {\n  var children = props.children,\n      TagName = props.TagName,\n      className = props.className,\n      getRef = props.getRef,\n      onSubmit = props.onSubmit,\n      restProps = _objectWithoutProperties(props, [\"children\", \"TagName\", \"className\", \"getRef\", \"onSubmit\"]);\n\n  return React.createElement(TagName, _extends({}, restProps, {\n    className: classNames(baseClassName, className),\n    onSubmit: onSubmit,\n    ref: getRef\n  }), React.createElement(\"div\", {\n    className: \"FormLayout__container\"\n  }, Children.toArray(children).map(function (field, i) {\n    if (field) {\n      var _field$props = field.props,\n          status = _field$props.status,\n          top = _field$props.top,\n          bottom = _field$props.bottom;\n      return React.createElement(\"div\", {\n        className: classNames('FormLayout__row', _defineProperty({}, \"FormLayout__row--s-\".concat(status), status)),\n        key: field.key || \"row-\".concat(i)\n      }, top && React.createElement(\"div\", {\n        className: \"FormLayout__row-top\"\n      }, top), field, bottom && React.createElement(\"div\", {\n        className: \"FormLayout__row-bottom\"\n      }, bottom));\n    } else {\n      return null;\n    }\n  })), TagName === 'form' && React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"FormLayout__submit\",\n    value: \"\"\n  }));\n};\n\nFormLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  TagName: PropTypes.string,\n  onSubmit: PropTypes.func,\n  getRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })])\n};\nFormLayout.defaultProps = {\n  status: 'default',\n  TagName: 'form',\n  onSubmit: preventDefault\n};\nexport default FormLayout;","map":null,"metadata":{},"sourceType":"module"}