{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport React from 'react';\nimport vkConnect from '@vkontakte/vk-connect';\nvar initialState = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\n\nfunction resolveInsets(e) {\n  var _e$detail = e.detail,\n      type = _e$detail.type,\n      data = _e$detail.data;\n\n  switch (type) {\n    case 'VKWebAppUpdateConfig':\n    case 'VKWebAppUpdateInsets':\n      // Устаревшее событие vk-connect\n      var insets = data.insets;\n\n      if (insets) {\n        return _objectSpread({}, insets, {\n          bottom: insets.bottom > 100 ? 0 : insets.bottom // если больше 100 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n\n        });\n      }\n\n  }\n}\n\nvkConnect.subscribe(function (e) {\n  var insets = resolveInsets(e);\n\n  if (insets) {\n    initialState = insets;\n  }\n});\nexport default function withInsets(Component) {\n  var _temp;\n\n  return _temp =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WithInsets, _React$Component);\n\n    function WithInsets() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, WithInsets);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WithInsets)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", initialState);\n\n      _defineProperty(_assertThisInitialized(_this), \"connectListener\", function (e) {\n        var insets = resolveInsets(e);\n\n        if (insets) {\n          _this.setState(insets);\n        }\n      });\n\n      return _this;\n    }\n\n    _createClass(WithInsets, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        vkConnect.subscribe(this.connectListener);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        vkConnect.unsubscribe(this.connectListener);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Component, _extends({}, this.props, {\n          insets: this.state\n        }));\n      }\n    }]);\n\n    return WithInsets;\n  }(React.Component), _temp;\n}","map":null,"metadata":{},"sourceType":"module"}