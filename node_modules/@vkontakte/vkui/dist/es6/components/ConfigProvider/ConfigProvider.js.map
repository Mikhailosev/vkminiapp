{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProvider.js"],"names":["React","PropTypes","isWebView","ConfigProvider","props","context","document","window","body","setAttribute","scheme","prevProps","webviewType","app","children","Component","bool","string","oneOf","node","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;IAEqBC,c;;;;;AACnB,0BAAaC,KAAb,EAAoBC,OAApB,EAA6B;AAAA;;AAAA;;AAC3B,wFAAMD,KAAN;AAEA,KAACC,OAAO,CAACC,QAAR,IAAoBC,MAAM,CAACD,QAA5B,EAAsCE,IAAtC,CAA2CC,YAA3C,CAAwD,QAAxD,EAAkEL,KAAK,CAACM,MAAxE;AAH2B;AAI5B;;;;uCA+BmBC,S,EAAW;AAC7B,UAAIA,SAAS,CAACD,MAAV,KAAqB,KAAKN,KAAL,CAAWM,MAApC,EAA4C;AAC1C,aAAKJ,QAAL,CAAcE,IAAd,CAAmBC,YAAnB,CAAgC,QAAhC,EAA0C,KAAKL,KAAL,CAAWM,MAArD;AACD;AACF;;;sCAEkB;AACjB,aAAO;AACLR,QAAAA,SAAS,EAAE,KAAKE,KAAL,CAAWF,SADjB;AAELU,QAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWQ,WAFnB;AAGLF,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MAHd;AAILG,QAAAA,GAAG,EAAE,KAAKT,KAAL,CAAWS;AAJX,OAAP;AAMD;;;6BAES;AACR,aAAO,KAAKT,KAAL,CAAWU,QAAlB;AACD;;;wBArBe;AACd,aAAO,KAAKT,OAAL,CAAaC,QAAb,IAAyBC,MAAM,CAACD,QAAvC;AACD;;;;EAlCyCN,KAAK,CAACe,S;;gBAA7BZ,c,uBAOQ;AACzBD,EAAAA,SAAS,EAAED,SAAS,CAACe,IADI;AAEzBN,EAAAA,MAAM,EAAET,SAAS,CAACgB,MAFO;AAGzBL,EAAAA,WAAW,EAAEX,SAAS,CAACiB,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,CAAhB,CAHY;AAIzBL,EAAAA,GAAG,EAAEZ,SAAS,CAACgB;AAJU,C;;gBAPRd,c,eAcA;AACjBO,EAAAA,MAAM,EAAET,SAAS,CAACgB,MADD;AAEjBf,EAAAA,SAAS,EAAED,SAAS,CAACe,IAFJ;AAGjBJ,EAAAA,WAAW,EAAEX,SAAS,CAACiB,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,CAAhB,CAHI;AAIjBL,EAAAA,GAAG,EAAEZ,SAAS,CAACgB,MAJE;AAKjBH,EAAAA,QAAQ,EAAEb,SAAS,CAACkB;AALH,C;;gBAdAhB,c,kBAsBG;AACpBS,EAAAA,WAAW,EAAE,UADO;AAEpBV,EAAAA,SAAS,EAATA,SAFoB;AAGpBQ,EAAAA,MAAM,EAAE;AAHY,C;;gBAtBHP,c,kBA4BG;AACpBG,EAAAA,QAAQ,EAAEL,SAAS,CAACmB;AADA,C;;SA5BHjB,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isWebView } from '../../lib/webview';\n\nexport default class ConfigProvider extends React.Component {\n  constructor (props, context) {\n    super(props);\n\n    (context.document || window.document).body.setAttribute('scheme', props.scheme);\n  }\n\n  static childContextTypes = {\n    isWebView: PropTypes.bool,\n    scheme: PropTypes.string,\n    webviewType: PropTypes.oneOf(['vkapps', 'internal']),\n    app: PropTypes.string\n  };\n\n  static propTypes = {\n    scheme: PropTypes.string,\n    isWebView: PropTypes.bool,\n    webviewType: PropTypes.oneOf(['vkapps', 'internal']),\n    app: PropTypes.string,\n    children: PropTypes.node\n  };\n\n  static defaultProps = {\n    webviewType: 'internal',\n    isWebView,\n    scheme: 'client_light'\n  };\n\n  static contextTypes = {\n    document: PropTypes.object\n  };\n\n  get document () {\n    return this.context.document || window.document;\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.scheme !== this.props.scheme) {\n      this.document.body.setAttribute('scheme', this.props.scheme);\n    }\n  }\n\n  getChildContext () {\n    return {\n      isWebView: this.props.isWebView,\n      webviewType: this.props.webviewType,\n      scheme: this.props.scheme,\n      app: this.props.app\n    };\n  }\n\n  render () {\n    return this.props.children;\n  }\n}\n"],"file":"ConfigProvider.js"}